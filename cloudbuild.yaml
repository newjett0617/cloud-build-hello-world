steps:
  - id: "docker-pull"
    name: "gcr.io/google.com/cloudsdktool/cloud-sdk:alpine"
    entrypoint: "bash"
    args:
      - "-c"
      - |
        docker pull ${_IMAGE_NAME}:latest || exit 0
    waitFor:
      - "-"

  - id: "docker-build"
    name: "gcr.io/google.com/cloudsdktool/cloud-sdk:alpine"
    entrypoint: "bash"
    args:
      - "-c"
      - |
        gsutil cp ${_ENV} .env && \
        docker build --cache-from ${_IMAGE_NAME}:latest -t ${_IMAGE_NAME}:${SHORT_SHA} -t ${_IMAGE_NAME}:latest .
    waitFor:
      - "docker-pull"

  - id: "docker-push"
    name: "gcr.io/google.com/cloudsdktool/cloud-sdk:alpine"
    entrypoint: "bash"
    args:
      - "-c"
      - |
        docker push ${_IMAGE_NAME}:${SHORT_SHA}
        docker push ${_IMAGE_NAME}:latest
    waitFor:
      - "docker-build"

  - id: "deploy"
    name: "gcr.io/google.com/cloudsdktool/cloud-sdk:alpine"
    entrypoint: "bash"
    args:
      - "-c"
      - |
        eval $(ssh-agent -s) && \
        echo "${_SSH_PRIVATE_KEY}" | tr -d "\r" | ssh-add - && \
        ssh -o StrictHostKeyChecking=no deployer@139.162.85.171 "docker-compose up -d --build --force-recreate app"
    waitFor:
      - "docker-push"

substitutions:
  _IMAGE_NAME: asia.gcr.io/${PROJECT_ID}/cloud-build-hello-world
  _ENV: gs://gludio/gludio-backend.env
